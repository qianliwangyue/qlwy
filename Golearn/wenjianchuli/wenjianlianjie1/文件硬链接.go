
/*
硬链接是在文件系统中创建多个文件名指向同一个文件的数据块。
这些文件名在文件系统中被视为等同的，因为它们指向相同的数据块。

在创建硬链接时，新的文件名与原始文件名都指向相同的数据块，
因此，如果其中一个文件名被删除，文件数据仍然存在于文件系统中，因为它仍然被其他文件名所引用。

硬链接只能在同一文件系统中创建，因为它们需要指向相同的数据块。 
软链接是一个特殊的文件，其中包含了指向另一个文件的路径。

软链接在文件系统中被视为不同的文件，因为它们指向不同的数据块。
如果原始文件被删除，软链接将失效，因为它指向的文件路径不再存在。

 硬链接和软链接的大小也不同。硬链接的大小与原始文件的大小相同，而软链接的大小则是指向另一个文件路径的大小。

 硬链接和软链接的用途也不同。
 硬链接通常用于在不同的目录中创建相同文件的多个副本，以节省存储空间。
 软链接通常用于创建指向其他文件或目录的快捷方式，以方便用户访问。

*/
package main

import (
	"fmt"
	"os"
)

func main() {
	fp, err := os.Create("目录/3333.txt")
	if err != nil {
		fmt.Println("文件创建失败!,err:", err)
	}
	defer fp.Close()
	err = os.Link("目录/3333.txt", "目录/4444.txt")
	if err != nil {
		fmt.Println("Link失败,err:", err)
	}
}

/*
文件的所有链接都指向同一个物理 文件。
文件链接数是文件的一个属性, 表示所有链接到该物理文件的文件名个数。
 当创建一 个文件时,文件链接数为1。每增加文件的一个链接,文件的链接数加 1。
 在删除文件时,每 删除文件的一个链接,文件的链接数减 1。
 只有文件的链接数减为零,该文件名所代表的物 理文件才从文件系统中实际删除。
*/
